import React, { useState } from "react";
import "./BlogPage.scss";

const BlogPage = () => {
  const [posts, setPosts] = useState([
    {
      id: 1,
      author: "Minh Anh",
      avatar: "MA",
      time: "2 gi·ªù tr∆∞·ªõc",
      text: "H√¥m nay tr√≤n 2 tu·∫ßn kh√¥ng h√∫t thu·ªëc! C·∫£m ∆°n m·ªçi ng∆∞·ªùi ƒë√£ ƒë·ªông vi√™n m√¨nh! üí™"
    },
    {
      id: 2,
      author: "Ho√†ng Nam",
      avatar: "HN",
      time: "5 gi·ªù tr∆∞·ªõc",
      text: "Chia s·∫ª tip: M·ªói khi th√®m thu·ªëc, m√¨nh l·∫°i u·ªëng m·ªôt ly n∆∞·ªõc v√† ƒëi b·ªô 5 ph√∫t. R·∫•t hi·ªáu qu·∫£!"
    },
    {
      id: 3,
      author: "Thu H·∫±ng",
      avatar: "TH",
      badge: "1 th√°ng ki√™n tr√¨",
      time: "1 ng√†y tr∆∞·ªõc",
      achievement: "üèÜ ƒê·∫°t ƒë∆∞·ª£c huy hi·ªáu: 1 th√°ng ki√™n tr√¨",
      text: "V·ª´a nh·∫≠n ƒë∆∞·ª£c huy hi·ªáu 1 th√°ng! C·∫£m ∆°n coach Linh ƒë√£ h·ªó tr·ª£ t·∫≠n t√¨nh ‚ù§Ô∏è"
    }
  ]);

  const [comments, setComments] = useState({
    1: [{ name: "An", text: "C·ªë l√™n b·∫°n!" }],
    2: [{ name: "Nam", text: "Tip hay qu√°!" }],
    3: [{ name: "H√†", text: "Ch√∫c m·ª´ng nh√©!" }]
  });

  const [newPost, setNewPost] = useState("");
  const [newComment, setNewComment] = useState({});

  const handleAddPost = () => {
    const text = newPost.trim();
    if (!text) return;

    const newId = posts.length ? posts[posts.length - 1].id + 1 : 1;
    const newPostData = {
      id: newId,
      author: "S",
      avatar: "S",
      time: "V·ª´a xong",
      text
    };

    setPosts((prev) => [...prev, newPostData]);
    setNewPost("");
  };

  const handleAddComment = (postId) => {
    const comment = (newComment[postId] || "").trim();
    if (!comment) return;

    setComments((prev) => ({
      ...prev,
      [postId]: [...(prev[postId] || []), { name: "S", text: comment }]
    }));

    setNewComment((prev) => ({
      ...prev,
      [postId]: ""
    }));
  };

  return (
    <div className="blog-page">
      <div className="blog-page__header">
        <h1>Blogs</h1>
      </div>
      <div className="blog-page__content">
        <div className="blog-page__left">
          <div className="blog-posts">
            <div className="post post--new">
              <div className="post__avatar">S</div>
              <div className="post__content post__content--new">
                <textarea
                  value={newPost}
                  placeholder="Vi·∫øt b√†i chia s·∫ª..."
                  onChange={(e) => setNewPost(e.target.value)}
                />
                <button onClick={handleAddPost}>ƒêƒÉng b√†i</button>
              </div>
            </div>

            {posts.map((post) => (
              <div className={`post ${post.badge ? "post--highlight" : ""}`} key={post.id}>
                <div className="post__avatar">{post.avatar}</div>
                <div className="post__content">
                  <div className="post__header">
                    <span className="post__author">{post.author}</span>
                    {post.badge && <span className="post__badge">{post.badge}</span>}
                    <span className="post__time">{post.time}</span>
                  </div>
                  {post.achievement && (
                    <div className="post__achievement">{post.achievement}</div>
                  )}
                  <div className="post__text">{post.text}</div>
                  <div className="post__actions">
                    <span>{comments[post.id]?.length || 0} b√¨nh lu·∫≠n</span>
                    <span className="post__encourage">ƒê·ªông vi√™n</span>
                  </div>
                  <div className="post__comments">
                    {comments[post.id]?.map((cmt, idx) => (
                      <div key={idx} className="post__comment-item">
                        <div className="post__comment-avatar">
                          {cmt.name.split(" ").map(w => w[0]).join("").substring(0,2).toUpperCase()}
                        </div>
                        <div className="post__comment-content">
                          <div className="post__comment-author">{cmt.name}</div>
                          <div className="post__comment-text">{cmt.text}</div>
                        </div>
                      </div>
                    ))}
                  </div>
                  <div className="post__comment-form">
                    <div className="post__comment-avatar">S</div>
                    <input
                      type="text"
                      placeholder="Vi·∫øt b√¨nh lu·∫≠n..."
                      value={newComment[post.id] || ""}
                      onChange={(e) =>
                        setNewComment((prev) => ({
                          ...prev,
                          [post.id]: e.target.value
                        }))
                      }
                      onKeyDown={(e) =>
                        e.key === "Enter" && handleAddComment(post.id)
                      }
                    />
                    <button
                      disabled={!(newComment[post.id] || "").trim()}
                      onClick={() => handleAddComment(post.id)}
                    >
                      G·ª≠i
                    </button>
                  </div>
                </div>
              </div>
            ))}

          </div>
        </div>
      </div>
    </div>
  );
};

export default BlogPage;
